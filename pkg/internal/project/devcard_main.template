package main

import (
	"fmt"
	"os"

	"github.com/igorhub/devcard"
	runtime "github.com/igorhub/devcard/pkg/runtime"
	{{.MaybeImport}}
)

func main() {
	if len(os.Args) < 4 {
		fmt.Fprintf(os.Stderr, "Usage: %s REPO_DIR TRANSIENT_DIR CARD_NAME [TCP_ADDRESS]\n", os.Args[0])
		os.Exit(2)
	}

	repoDir, transientDir, cardName := os.Args[1], os.Args[2], os.Args[3]
	if err := os.Chdir(repoDir); err != nil {
		fmt.Fprintf(os.Stderr, "WARNING: failed to chdir: %s", err)
	}

	var producer devcard.DevcardProducer
	switch cardName {
	{{range .Cards}}
	case "{{.Name}}":
		producer = {{$.MaybePackage}}{{.Name}}
	{{end}}
	default:
		fmt.Fprintf(os.Stderr, "No such devcard: %s\n", cardName)
		os.Exit(1)
	}

	if len(os.Args) == 4 {
		runtime.ProduceDevcardWithJSON(transientDir, producer)
	} else {
		addr := os.Args[4]
		runtime.ProduceDevcardWithTCP(addr, transientDir, producer)
	}
}
